INFO  16:11:25,951 - Compiling source file: C:\Users\Aleksandar\Desktop\PP\projekat\PP_Projekat\pp_projekat\test\program.mj
INFO  16:11:26,011 - #6 program
INFO  16:11:26,011 - #4 test302
INFO  16:11:26,011 - #9 const
INFO  16:11:26,012 - #4 int
INFO  16:11:26,012 - #4 jedan
INFO  16:11:26,012 - #10 =
INFO  16:11:26,012 - #2 1
INFO  16:11:26,012 - #37 ;
INFO  16:11:26,013 - #4 int
INFO  16:11:26,013 - #4 i
INFO  16:11:26,013 - #37 ;
INFO  16:11:26,014 - #4 bool
INFO  16:11:26,014 - #4 ibool
INFO  16:11:26,014 - #37 ;
INFO  16:11:26,014 - #4 int
INFO  16:11:26,014 - #4 niz2
INFO  16:11:26,015 - #37 ;
INFO  16:11:26,015 - #4 int
INFO  16:11:26,015 - #4 niz
INFO  16:11:26,015 - #44 [
INFO  16:11:26,015 - #45 ]
INFO  16:11:26,019 - #37 ;
INFO  16:11:26,019 - #4 int
INFO  16:11:26,019 - #4 a
INFO  16:11:26,019 - #37 ;
INFO  16:11:26,019 - #7 {
INFO  16:11:26,019 - #4 int
INFO  16:11:26,020 - #4 sum
INFO  16:11:26,020 - #22 (
INFO  16:11:26,020 - #4 int
INFO  16:11:26,020 - #4 z
INFO  16:11:26,020 - #18 ,
INFO  16:11:26,021 - #4 int
INFO  16:11:26,021 - #4 d
INFO  16:11:26,021 - #23 )
INFO  16:11:26,021 - #7 {
INFO  16:11:26,021 - #42 return
INFO  16:11:26,022 - #4 z
INFO  16:11:26,023 - #30 +
INFO  16:11:26,025 - #4 d
INFO  16:11:26,025 - #37 ;
INFO  16:11:26,026 - #8 }
INFO  16:11:26,026 - #4 int
INFO  16:11:26,026 - #4 inkrement
INFO  16:11:26,026 - #22 (
INFO  16:11:26,026 - #4 int
INFO  16:11:26,026 - #4 a
INFO  16:11:26,027 - #18 ,
INFO  16:11:26,027 - #4 int
INFO  16:11:26,027 - #4 inc
INFO  16:11:26,027 - #23 )
INFO  16:11:26,027 - #4 int
INFO  16:11:26,027 - #4 pom
INFO  16:11:26,027 - #37 ;
INFO  16:11:26,027 - #7 {
INFO  16:11:26,028 - #36 if
INFO  16:11:26,028 - #22 (
INFO  16:11:26,028 - #4 inc
INFO  16:11:26,028 - #11 ==
INFO  16:11:26,028 - #4 jedan
INFO  16:11:26,029 - #23 )
INFO  16:11:26,030 - #4 pom
INFO  16:11:26,030 - #10 =
INFO  16:11:26,030 - #2 1
INFO  16:11:26,031 - #37 ;
INFO  16:11:26,031 - #51 else
INFO  16:11:26,031 - #36 if
INFO  16:11:26,031 - #22 (
INFO  16:11:26,031 - #4 inc
INFO  16:11:26,031 - #11 ==
INFO  16:11:26,031 - #2 2
INFO  16:11:26,031 - #23 )
INFO  16:11:26,031 - #4 pom
INFO  16:11:26,031 - #10 =
INFO  16:11:26,032 - #4 a
INFO  16:11:26,032 - #37 ;
INFO  16:11:26,032 - #42 return
INFO  16:11:26,032 - #4 sum
INFO  16:11:26,032 - #22 (
INFO  16:11:26,032 - #4 a
INFO  16:11:26,032 - #18 ,
INFO  16:11:26,033 - #4 pom
INFO  16:11:26,033 - #23 )
INFO  16:11:26,033 - #37 ;
INFO  16:11:26,033 - #8 }
INFO  16:11:26,033 - #4 bool
INFO  16:11:26,033 - #4 verify
INFO  16:11:26,033 - #22 (
INFO  16:11:26,033 - #23 )
INFO  16:11:26,033 - #7 {
INFO  16:11:26,034 - #25 print
INFO  16:11:26,034 - #22 (
INFO  16:11:26,034 - #5 v
INFO  16:11:26,034 - #23 )
INFO  16:11:26,034 - #37 ;
INFO  16:11:26,034 - #42 return
INFO  16:11:26,035 - #3 false
INFO  16:11:26,035 - #37 ;
INFO  16:11:26,035 - #8 }
INFO  16:11:26,035 - #24 void
INFO  16:11:26,035 - #4 main
INFO  16:11:26,035 - #22 (
INFO  16:11:26,035 - #23 )
INFO  16:11:26,035 - #7 {
INFO  16:11:26,035 - #4 sum
INFO  16:11:26,035 - #22 (
INFO  16:11:26,035 - #2 1
INFO  16:11:26,035 - #18 ,
INFO  16:11:26,035 - #2 2
INFO  16:11:26,035 - #23 )
INFO  16:11:26,036 - #37 ;
INFO  16:11:26,036 - #36 if
INFO  16:11:26,036 - #22 (
INFO  16:11:26,036 - #2 1
INFO  16:11:26,036 - #12 !=
INFO  16:11:26,036 - #2 1
INFO  16:11:26,036 - #23 )
INFO  16:11:26,037 - #25 print
INFO  16:11:26,037 - #22 (
INFO  16:11:26,037 - #31 -
INFO  16:11:26,037 - #2 6
INFO  16:11:26,037 - #23 )
INFO  16:11:26,037 - #37 ;
INFO  16:11:26,037 - #51 else
INFO  16:11:26,037 - #25 print
INFO  16:11:26,037 - #22 (
INFO  16:11:26,037 - #2 0
INFO  16:11:26,037 - #23 )
INFO  16:11:26,037 - #37 ;
INFO  16:11:26,037 - #4 ibool
INFO  16:11:26,037 - #10 =
INFO  16:11:26,037 - #3 false
INFO  16:11:26,037 - #37 ;
INFO  16:11:26,037 - #4 i
INFO  16:11:26,037 - #10 =
INFO  16:11:26,037 - #2 0
INFO  16:11:26,038 - #37 ;
INFO  16:11:26,038 - #38 do
INFO  16:11:26,038 - #7 {
INFO  16:11:26,038 - #36 if
INFO  16:11:26,038 - #22 (
INFO  16:11:26,038 - #4 i
INFO  16:11:26,038 - #11 ==
INFO  16:11:26,038 - #2 2
INFO  16:11:26,038 - #23 )
INFO  16:11:26,038 - #4 ibool
INFO  16:11:26,038 - #10 =
INFO  16:11:26,038 - #3 true
INFO  16:11:26,038 - #37 ;
INFO  16:11:26,038 - #4 i
INFO  16:11:26,038 - #46 ++
INFO  16:11:26,038 - #37 ;
INFO  16:11:26,038 - #8 }
INFO  16:11:26,038 - #39 while
INFO  16:11:26,039 - #22 (
INFO  16:11:26,039 - #4 i
INFO  16:11:26,039 - #48 <
INFO  16:11:26,039 - #2 5
INFO  16:11:26,039 - #23 )
INFO  16:11:26,039 - #37 ;
INFO  16:11:26,039 - #36 if
INFO  16:11:26,039 - #22 (
INFO  16:11:26,039 - #4 ibool
INFO  16:11:26,040 - #23 )
INFO  16:11:26,040 - #36 if
INFO  16:11:26,040 - #22 (
INFO  16:11:26,040 - #4 i
INFO  16:11:26,040 - #11 ==
INFO  16:11:26,040 - #2 5
INFO  16:11:26,040 - #23 )
INFO  16:11:26,040 - #25 print
INFO  16:11:26,040 - #22 (
INFO  16:11:26,040 - #2 1
INFO  16:11:26,040 - #23 )
INFO  16:11:26,040 - #37 ;
INFO  16:11:26,041 - #51 else
INFO  16:11:26,041 - #25 print
INFO  16:11:26,041 - #22 (
INFO  16:11:26,041 - #31 -
INFO  16:11:26,041 - #2 1
INFO  16:11:26,041 - #23 )
INFO  16:11:26,041 - #37 ;
INFO  16:11:26,041 - #4 a
INFO  16:11:26,041 - #10 =
INFO  16:11:26,041 - #2 2
INFO  16:11:26,041 - #37 ;
INFO  16:11:26,041 - #4 niz
INFO  16:11:26,041 - #10 =
INFO  16:11:26,041 - #28 new
INFO  16:11:26,041 - #4 int
INFO  16:11:26,041 - #44 [
INFO  16:11:26,041 - #2 3
INFO  16:11:26,041 - #45 ]
INFO  16:11:26,041 - #37 ;
INFO  16:11:26,041 - #4 niz
INFO  16:11:26,042 - #44 [
INFO  16:11:26,042 - #2 0
INFO  16:11:26,042 - #45 ]
INFO  16:11:26,042 - #10 =
INFO  16:11:26,042 - #2 1
INFO  16:11:26,042 - #32 *
INFO  16:11:26,042 - #4 a
INFO  16:11:26,043 - #37 ;
INFO  16:11:26,043 - #4 niz
INFO  16:11:26,043 - #44 [
INFO  16:11:26,043 - #2 1
INFO  16:11:26,043 - #45 ]
INFO  16:11:26,043 - #10 =
INFO  16:11:26,043 - #2 2
INFO  16:11:26,043 - #32 *
INFO  16:11:26,043 - #4 a
INFO  16:11:26,043 - #37 ;
INFO  16:11:26,043 - #4 niz
INFO  16:11:26,043 - #44 [
INFO  16:11:26,043 - #2 2
INFO  16:11:26,043 - #45 ]
INFO  16:11:26,043 - #10 =
INFO  16:11:26,043 - #4 sum
INFO  16:11:26,043 - #22 (
INFO  16:11:26,044 - #4 niz
INFO  16:11:26,044 - #44 [
INFO  16:11:26,044 - #2 1
INFO  16:11:26,044 - #45 ]
INFO  16:11:26,044 - #18 ,
INFO  16:11:26,044 - #4 niz
INFO  16:11:26,044 - #44 [
INFO  16:11:26,044 - #2 0
INFO  16:11:26,044 - #45 ]
INFO  16:11:26,044 - #23 )
INFO  16:11:26,044 - #32 *
INFO  16:11:26,044 - #4 a
INFO  16:11:26,044 - #30 +
INFO  16:11:26,044 - #2 1
INFO  16:11:26,044 - #37 ;
INFO  16:11:26,044 - #36 if
INFO  16:11:26,044 - #22 (
INFO  16:11:26,044 - #4 verify
INFO  16:11:26,044 - #22 (
INFO  16:11:26,044 - #23 )
INFO  16:11:26,045 - #50 ||
INFO  16:11:26,045 - #4 niz
INFO  16:11:26,045 - #44 [
INFO  16:11:26,045 - #2 2
INFO  16:11:26,045 - #45 ]
INFO  16:11:26,045 - #11 ==
INFO  16:11:26,045 - #2 4
INFO  16:11:26,045 - #23 )
INFO  16:11:26,045 - #25 print
INFO  16:11:26,045 - #22 (
INFO  16:11:26,045 - #4 ord
INFO  16:11:26,045 - #22 (
INFO  16:11:26,045 - #5 A
INFO  16:11:26,045 - #23 )
INFO  16:11:26,046 - #23 )
INFO  16:11:26,046 - #37 ;
INFO  16:11:26,046 - #51 else
INFO  16:11:26,046 - #25 print
INFO  16:11:26,046 - #22 (
INFO  16:11:26,046 - #4 ord
INFO  16:11:26,046 - #22 (
INFO  16:11:26,046 - #5 a
INFO  16:11:26,046 - #23 )
INFO  16:11:26,046 - #23 )
INFO  16:11:26,046 - #37 ;
INFO  16:11:26,046 - #25 print
INFO  16:11:26,046 - #22 (
INFO  16:11:26,046 - #4 eol
INFO  16:11:26,046 - #23 )
INFO  16:11:26,046 - #37 ;
INFO  16:11:26,046 - #4 i
INFO  16:11:26,046 - #10 =
INFO  16:11:26,046 - #2 0
INFO  16:11:26,046 - #37 ;
INFO  16:11:26,046 - #38 do
INFO  16:11:26,046 - #7 {
INFO  16:11:26,046 - #36 if
INFO  16:11:26,046 - #22 (
INFO  16:11:26,046 - #4 i
INFO  16:11:26,046 - #11 ==
INFO  16:11:26,047 - #2 3
INFO  16:11:26,047 - #23 )
INFO  16:11:26,047 - #7 {
INFO  16:11:26,047 - #4 i
INFO  16:11:26,047 - #46 ++
INFO  16:11:26,047 - #37 ;
INFO  16:11:26,047 - #41 continue
INFO  16:11:26,047 - #37 ;
INFO  16:11:26,047 - #8 }
INFO  16:11:26,047 - #36 if
INFO  16:11:26,047 - #22 (
INFO  16:11:26,047 - #4 i
INFO  16:11:26,047 - #11 ==
INFO  16:11:26,047 - #2 4
INFO  16:11:26,047 - #23 )
INFO  16:11:26,048 - #40 break
INFO  16:11:26,048 - #37 ;
INFO  16:11:26,048 - #4 i
INFO  16:11:26,048 - #10 =
INFO  16:11:26,048 - #4 inkrement
INFO  16:11:26,048 - #22 (
INFO  16:11:26,048 - #4 i
INFO  16:11:26,048 - #18 ,
INFO  16:11:26,048 - #2 1
INFO  16:11:26,048 - #23 )
INFO  16:11:26,048 - #37 ;
INFO  16:11:26,048 - #8 }
INFO  16:11:26,048 - #39 while
INFO  16:11:26,048 - #22 (
INFO  16:11:26,048 - #4 i
INFO  16:11:26,048 - #48 <
INFO  16:11:26,048 - #2 10
INFO  16:11:26,048 - #23 )
INFO  16:11:26,048 - #37 ;
INFO  16:11:26,048 - #36 if
INFO  16:11:26,049 - #22 (
INFO  16:11:26,049 - #4 i
INFO  16:11:26,049 - #11 ==
INFO  16:11:26,049 - #2 3
INFO  16:11:26,049 - #27 &&
INFO  16:11:26,049 - #4 verify
INFO  16:11:26,049 - #22 (
INFO  16:11:26,049 - #23 )
INFO  16:11:26,049 - #23 )
INFO  16:11:26,049 - #25 print
INFO  16:11:26,049 - #22 (
INFO  16:11:26,049 - #31 -
INFO  16:11:26,049 - #2 4
INFO  16:11:26,049 - #23 )
INFO  16:11:26,049 - #37 ;
INFO  16:11:26,049 - #51 else
INFO  16:11:26,049 - #25 print
INFO  16:11:26,049 - #22 (
INFO  16:11:26,049 - #2 4
INFO  16:11:26,049 - #23 )
INFO  16:11:26,049 - #37 ;
INFO  16:11:26,049 - #43 read
INFO  16:11:26,049 - #22 (
INFO  16:11:26,049 - #4 niz
INFO  16:11:26,050 - #44 [
INFO  16:11:26,050 - #2 0
INFO  16:11:26,050 - #45 ]
INFO  16:11:26,050 - #23 )
INFO  16:11:26,050 - #37 ;
INFO  16:11:26,050 - #43 read
INFO  16:11:26,050 - #22 (
INFO  16:11:26,050 - #4 niz
INFO  16:11:26,050 - #44 [
INFO  16:11:26,050 - #2 1
INFO  16:11:26,050 - #45 ]
INFO  16:11:26,050 - #23 )
INFO  16:11:26,050 - #37 ;
INFO  16:11:26,050 - #43 read
INFO  16:11:26,050 - #22 (
INFO  16:11:26,050 - #4 niz
INFO  16:11:26,050 - #44 [
INFO  16:11:26,050 - #2 2
INFO  16:11:26,050 - #45 ]
INFO  16:11:26,050 - #23 )
INFO  16:11:26,050 - #37 ;
INFO  16:11:26,050 - #25 print
INFO  16:11:26,050 - #22 (
INFO  16:11:26,050 - #4 eol
INFO  16:11:26,050 - #23 )
INFO  16:11:26,050 - #37 ;
INFO  16:11:26,050 - #40 break
INFO  16:11:26,050 - #37 ;
INFO  16:11:26,050 - #25 print
INFO  16:11:26,050 - #22 (
INFO  16:11:26,050 - #4 sum
INFO  16:11:26,051 - #22 (
INFO  16:11:26,051 - #4 sum
INFO  16:11:26,051 - #22 (
INFO  16:11:26,051 - #4 niz
INFO  16:11:26,051 - #44 [
INFO  16:11:26,051 - #2 0
INFO  16:11:26,051 - #45 ]
INFO  16:11:26,051 - #18 ,
INFO  16:11:26,051 - #4 niz
INFO  16:11:26,051 - #44 [
INFO  16:11:26,051 - #2 1
INFO  16:11:26,051 - #45 ]
INFO  16:11:26,051 - #23 )
INFO  16:11:26,051 - #18 ,
INFO  16:11:26,051 - #4 niz
INFO  16:11:26,051 - #44 [
INFO  16:11:26,051 - #2 2
INFO  16:11:26,051 - #45 ]
INFO  16:11:26,051 - #23 )
INFO  16:11:26,051 - #23 )
INFO  16:11:26,051 - #37 ;
INFO  16:11:26,051 - #25 print
INFO  16:11:26,051 - #22 (
INFO  16:11:26,051 - #4 eol
INFO  16:11:26,051 - #23 )
INFO  16:11:26,051 - #37 ;
INFO  16:11:26,051 - #25 print
INFO  16:11:26,051 - #22 (
INFO  16:11:26,051 - #4 inkrement
INFO  16:11:26,051 - #22 (
INFO  16:11:26,052 - #4 niz
INFO  16:11:26,052 - #44 [
INFO  16:11:26,052 - #2 2
INFO  16:11:26,052 - #45 ]
INFO  16:11:26,052 - #18 ,
INFO  16:11:26,052 - #2 2
INFO  16:11:26,052 - #23 )
INFO  16:11:26,052 - #23 )
INFO  16:11:26,052 - #37 ;
INFO  16:11:26,052 - #4 a
INFO  16:11:26,052 - #10 =
INFO  16:11:26,052 - #2 3
INFO  16:11:26,052 - #37 ;
INFO  16:11:26,052 - #4 i
INFO  16:11:26,052 - #10 =
INFO  16:11:26,052 - #2 0
INFO  16:11:26,052 - #37 ;
INFO  16:11:26,052 - #38 do
INFO  16:11:26,052 - #7 {
INFO  16:11:26,052 - #4 niz
INFO  16:11:26,052 - #44 [
INFO  16:11:26,052 - #4 i
INFO  16:11:26,052 - #45 ]
INFO  16:11:26,052 - #10 =
INFO  16:11:26,052 - #4 niz
INFO  16:11:26,052 - #44 [
INFO  16:11:26,052 - #4 i
INFO  16:11:26,052 - #45 ]
INFO  16:11:26,052 - #32 *
INFO  16:11:26,052 - #2 2
INFO  16:11:26,053 - #32 *
INFO  16:11:26,053 - #4 a
INFO  16:11:26,053 - #37 ;
INFO  16:11:26,053 - #4 i
INFO  16:11:26,053 - #46 ++
INFO  16:11:26,053 - #37 ;
INFO  16:11:26,053 - #8 }
INFO  16:11:26,053 - #39 while
INFO  16:11:26,053 - #22 (
INFO  16:11:26,053 - #4 i
INFO  16:11:26,053 - #48 <
INFO  16:11:26,053 - #2 3
INFO  16:11:26,053 - #23 )
INFO  16:11:26,053 - #37 ;
INFO  16:11:26,053 - #25 print
INFO  16:11:26,053 - #22 (
INFO  16:11:26,053 - #4 niz
INFO  16:11:26,053 - #44 [
INFO  16:11:26,053 - #2 0
INFO  16:11:26,053 - #45 ]
INFO  16:11:26,054 - #23 )
INFO  16:11:26,054 - #37 ;
INFO  16:11:26,054 - #25 print
INFO  16:11:26,054 - #22 (
INFO  16:11:26,054 - #4 niz
INFO  16:11:26,054 - #44 [
INFO  16:11:26,054 - #2 1
INFO  16:11:26,054 - #45 ]
INFO  16:11:26,054 - #23 )
INFO  16:11:26,054 - #37 ;
INFO  16:11:26,054 - #25 print
INFO  16:11:26,054 - #22 (
INFO  16:11:26,054 - #4 niz
INFO  16:11:26,054 - #44 [
INFO  16:11:26,054 - #2 2
INFO  16:11:26,054 - #45 ]
INFO  16:11:26,054 - #23 )
INFO  16:11:26,054 - #37 ;
INFO  16:11:26,054 - #25 print
INFO  16:11:26,054 - #22 (
INFO  16:11:26,054 - #4 eol
INFO  16:11:26,054 - #23 )
INFO  16:11:26,054 - #37 ;
INFO  16:11:26,054 - #4 i
INFO  16:11:26,054 - #10 =
INFO  16:11:26,054 - #2 0
INFO  16:11:26,054 - #37 ;
INFO  16:11:26,054 - #4 niz2
INFO  16:11:26,054 - #10 =
INFO  16:11:26,054 - #2 0
INFO  16:11:26,054 - #37 ;
INFO  16:11:26,054 - #38 do
INFO  16:11:26,054 - #7 {
INFO  16:11:26,054 - #4 niz2
INFO  16:11:26,055 - #10 =
INFO  16:11:26,055 - #4 niz2
INFO  16:11:26,055 - #30 +
INFO  16:11:26,055 - #4 niz
INFO  16:11:26,055 - #44 [
INFO  16:11:26,055 - #4 i
INFO  16:11:26,055 - #45 ]
INFO  16:11:26,055 - #32 *
INFO  16:11:26,055 - #4 niz
INFO  16:11:26,055 - #44 [
INFO  16:11:26,055 - #4 i
INFO  16:11:26,055 - #45 ]
INFO  16:11:26,055 - #37 ;
INFO  16:11:26,055 - #4 i
INFO  16:11:26,055 - #46 ++
INFO  16:11:26,055 - #37 ;
INFO  16:11:26,055 - #8 }
INFO  16:11:26,055 - #39 while
INFO  16:11:26,055 - #22 (
INFO  16:11:26,055 - #4 i
INFO  16:11:26,055 - #48 <
INFO  16:11:26,055 - #2 3
INFO  16:11:26,055 - #23 )
INFO  16:11:26,055 - #37 ;
INFO  16:11:26,055 - #25 print
INFO  16:11:26,055 - #22 (
INFO  16:11:26,055 - #4 niz2
INFO  16:11:26,055 - #23 )
INFO  16:11:26,055 - #37 ;
INFO  16:11:26,055 - #25 print
INFO  16:11:26,055 - #22 (
INFO  16:11:26,055 - #4 eol
INFO  16:11:26,055 - #23 )
INFO  16:11:26,055 - #37 ;
INFO  16:11:26,056 - #8 }
INFO  16:11:26,056 - #8 }
INFO  16:11:26,059 - ===================================
INFO  16:11:26,068 - Pronadjen poziv funkcije sum na liniji 28
INFO  16:11:26,068 - Obradjuje se funkcija main na liniji 36
INFO  16:11:27,610 - Pronadjen poziv funkcije sum na liniji 56
INFO  16:11:27,610 - Pronadjen poziv funkcije verify na liniji 57
INFO  16:11:27,610 - Pronadjen poziv funkcije ord na liniji 57
INFO  16:11:27,610 - Pronadjen poziv funkcije ord na liniji 58
INFO  16:11:28,832 - Pronadjen poziv funkcije inkrement na liniji 69
INFO  16:11:31,298 - Gotovo izvrsavanje petlje na liniji 62
INFO  16:11:32,406 - Pronadjen poziv funkcije verify na liniji 72
INFO  16:11:48,482 - Pronadjen poziv funkcije sum na liniji 80
INFO  16:11:48,482 - Pronadjen poziv funkcije sum na liniji 80
INFO  16:11:48,482 - Pronadjen poziv funkcije inkrement na liniji 83
ERROR 16:11:51,194 - Break iskaz se poziva samo unutar do while petlje na liniji 87
INFO  16:11:58,328 -  Print count calls = 20
INFO  16:11:58,328 -  Deklarisanih promenljivih ima = 1
INFO  16:11:58,328 - ===================================
