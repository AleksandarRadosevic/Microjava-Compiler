INFO  16:10:09,977 - Compiling source file: C:\Users\Aleksandar\Desktop\PP\projekat\PP_Projekat\pp_projekat\test\program.mj
INFO  16:10:10,035 - #6 program
INFO  16:10:10,035 - #4 test302
INFO  16:10:10,035 - #9 const
INFO  16:10:10,036 - #4 int
INFO  16:10:10,036 - #4 jedan
INFO  16:10:10,036 - #10 =
INFO  16:10:10,036 - #2 1
INFO  16:10:10,036 - #37 ;
INFO  16:10:10,037 - #4 int
INFO  16:10:10,037 - #4 i
INFO  16:10:10,037 - #37 ;
INFO  16:10:10,038 - #4 bool
INFO  16:10:10,039 - #4 ibool
INFO  16:10:10,039 - #37 ;
INFO  16:10:10,039 - #4 int
INFO  16:10:10,039 - #4 niz2
INFO  16:10:10,039 - #37 ;
INFO  16:10:10,039 - #4 int
INFO  16:10:10,039 - #4 niz
INFO  16:10:10,039 - #44 [
INFO  16:10:10,039 - #45 ]
INFO  16:10:10,040 - #37 ;
INFO  16:10:10,040 - #4 int
INFO  16:10:10,040 - #4 a
INFO  16:10:10,040 - #37 ;
INFO  16:10:10,040 - #7 {
INFO  16:10:10,040 - #4 int
INFO  16:10:10,041 - #4 sum
INFO  16:10:10,041 - #22 (
INFO  16:10:10,041 - #4 int
INFO  16:10:10,041 - #4 z
INFO  16:10:10,041 - #18 ,
INFO  16:10:10,041 - #4 int
INFO  16:10:10,041 - #4 d
INFO  16:10:10,041 - #23 )
INFO  16:10:10,042 - #7 {
INFO  16:10:10,042 - #42 return
INFO  16:10:10,043 - #4 z
INFO  16:10:10,043 - #30 +
INFO  16:10:10,045 - #4 d
INFO  16:10:10,046 - #37 ;
INFO  16:10:10,046 - #8 }
INFO  16:10:10,047 - #4 int
INFO  16:10:10,047 - #4 inkrement
INFO  16:10:10,047 - #22 (
INFO  16:10:10,047 - #4 int
INFO  16:10:10,047 - #4 a
INFO  16:10:10,047 - #18 ,
INFO  16:10:10,047 - #4 int
INFO  16:10:10,047 - #4 inc
INFO  16:10:10,047 - #23 )
INFO  16:10:10,048 - #4 int
INFO  16:10:10,048 - #4 pom
INFO  16:10:10,048 - #37 ;
INFO  16:10:10,048 - #7 {
INFO  16:10:10,048 - #36 if
INFO  16:10:10,048 - #22 (
INFO  16:10:10,048 - #4 inc
INFO  16:10:10,048 - #11 ==
INFO  16:10:10,049 - #4 jedan
INFO  16:10:10,049 - #23 )
INFO  16:10:10,050 - #4 pom
INFO  16:10:10,051 - #10 =
INFO  16:10:10,051 - #2 1
INFO  16:10:10,051 - #37 ;
INFO  16:10:10,052 - #51 else
INFO  16:10:10,052 - #36 if
INFO  16:10:10,052 - #22 (
INFO  16:10:10,052 - #4 inc
INFO  16:10:10,052 - #11 ==
INFO  16:10:10,052 - #2 2
INFO  16:10:10,052 - #23 )
INFO  16:10:10,052 - #4 pom
INFO  16:10:10,052 - #10 =
INFO  16:10:10,052 - #4 a
INFO  16:10:10,052 - #37 ;
INFO  16:10:10,052 - #42 return
INFO  16:10:10,053 - #4 sum
INFO  16:10:10,053 - #22 (
INFO  16:10:10,053 - #4 a
INFO  16:10:10,053 - #18 ,
INFO  16:10:10,053 - #4 pom
INFO  16:10:10,053 - #23 )
INFO  16:10:10,054 - #37 ;
INFO  16:10:10,054 - #8 }
INFO  16:10:10,054 - #4 bool
INFO  16:10:10,054 - #4 verify
INFO  16:10:10,054 - #22 (
INFO  16:10:10,054 - #23 )
INFO  16:10:10,054 - #7 {
INFO  16:10:10,054 - #25 print
INFO  16:10:10,055 - #22 (
INFO  16:10:10,055 - #5 v
INFO  16:10:10,055 - #23 )
INFO  16:10:10,055 - #37 ;
INFO  16:10:10,055 - #42 return
INFO  16:10:10,055 - #3 false
INFO  16:10:10,055 - #37 ;
INFO  16:10:10,056 - #8 }
INFO  16:10:10,056 - #24 void
INFO  16:10:10,056 - #4 main
INFO  16:10:10,056 - #22 (
INFO  16:10:10,056 - #23 )
INFO  16:10:10,056 - #7 {
INFO  16:10:10,056 - #4 sum
INFO  16:10:10,056 - #22 (
INFO  16:10:10,056 - #2 1
INFO  16:10:10,056 - #18 ,
INFO  16:10:10,056 - #2 2
INFO  16:10:10,056 - #23 )
INFO  16:10:10,056 - #37 ;
INFO  16:10:10,056 - #36 if
INFO  16:10:10,057 - #22 (
INFO  16:10:10,057 - #2 1
INFO  16:10:10,057 - #12 !=
INFO  16:10:10,057 - #2 1
INFO  16:10:10,057 - #23 )
INFO  16:10:10,057 - #25 print
INFO  16:10:10,057 - #22 (
INFO  16:10:10,057 - #31 -
INFO  16:10:10,057 - #2 6
INFO  16:10:10,057 - #23 )
INFO  16:10:10,057 - #37 ;
INFO  16:10:10,057 - #51 else
INFO  16:10:10,057 - #25 print
INFO  16:10:10,058 - #22 (
INFO  16:10:10,058 - #2 0
INFO  16:10:10,058 - #23 )
INFO  16:10:10,058 - #37 ;
INFO  16:10:10,058 - #4 ibool
INFO  16:10:10,058 - #10 =
INFO  16:10:10,058 - #3 false
INFO  16:10:10,058 - #37 ;
INFO  16:10:10,058 - #4 i
INFO  16:10:10,058 - #10 =
INFO  16:10:10,058 - #2 0
INFO  16:10:10,058 - #37 ;
INFO  16:10:10,058 - #38 do
INFO  16:10:10,058 - #7 {
INFO  16:10:10,058 - #36 if
INFO  16:10:10,058 - #22 (
INFO  16:10:10,058 - #4 i
INFO  16:10:10,058 - #11 ==
INFO  16:10:10,058 - #2 2
INFO  16:10:10,058 - #23 )
INFO  16:10:10,059 - #4 ibool
INFO  16:10:10,059 - #10 =
INFO  16:10:10,059 - #3 true
INFO  16:10:10,059 - #37 ;
INFO  16:10:10,059 - #4 i
INFO  16:10:10,059 - #46 ++
INFO  16:10:10,059 - #37 ;
INFO  16:10:10,059 - #8 }
INFO  16:10:10,059 - #39 while
INFO  16:10:10,059 - #22 (
INFO  16:10:10,059 - #4 i
INFO  16:10:10,059 - #48 <
INFO  16:10:10,059 - #2 5
INFO  16:10:10,060 - #23 )
INFO  16:10:10,060 - #37 ;
INFO  16:10:10,060 - #36 if
INFO  16:10:10,060 - #22 (
INFO  16:10:10,060 - #4 ibool
INFO  16:10:10,060 - #23 )
INFO  16:10:10,060 - #36 if
INFO  16:10:10,060 - #22 (
INFO  16:10:10,060 - #4 i
INFO  16:10:10,060 - #11 ==
INFO  16:10:10,061 - #2 5
INFO  16:10:10,061 - #23 )
INFO  16:10:10,061 - #25 print
INFO  16:10:10,061 - #22 (
INFO  16:10:10,061 - #2 1
INFO  16:10:10,061 - #23 )
INFO  16:10:10,061 - #37 ;
INFO  16:10:10,061 - #51 else
INFO  16:10:10,061 - #25 print
INFO  16:10:10,061 - #22 (
INFO  16:10:10,061 - #31 -
INFO  16:10:10,061 - #2 1
INFO  16:10:10,061 - #23 )
INFO  16:10:10,061 - #37 ;
INFO  16:10:10,061 - #4 a
INFO  16:10:10,061 - #10 =
INFO  16:10:10,061 - #2 2
INFO  16:10:10,061 - #37 ;
INFO  16:10:10,061 - #4 niz
INFO  16:10:10,061 - #10 =
INFO  16:10:10,061 - #28 new
INFO  16:10:10,061 - #4 int
INFO  16:10:10,061 - #44 [
INFO  16:10:10,062 - #2 3
INFO  16:10:10,062 - #45 ]
INFO  16:10:10,062 - #37 ;
INFO  16:10:10,062 - #4 niz
INFO  16:10:10,062 - #44 [
INFO  16:10:10,062 - #2 0
INFO  16:10:10,062 - #45 ]
INFO  16:10:10,062 - #10 =
INFO  16:10:10,062 - #2 1
INFO  16:10:10,062 - #32 *
INFO  16:10:10,062 - #4 a
INFO  16:10:10,063 - #37 ;
INFO  16:10:10,063 - #4 niz
INFO  16:10:10,063 - #44 [
INFO  16:10:10,063 - #2 1
INFO  16:10:10,063 - #45 ]
INFO  16:10:10,063 - #10 =
INFO  16:10:10,063 - #2 2
INFO  16:10:10,063 - #32 *
INFO  16:10:10,063 - #4 a
INFO  16:10:10,063 - #37 ;
INFO  16:10:10,064 - #4 niz
INFO  16:10:10,064 - #44 [
INFO  16:10:10,064 - #2 2
INFO  16:10:10,064 - #45 ]
INFO  16:10:10,064 - #10 =
INFO  16:10:10,064 - #4 sum
INFO  16:10:10,064 - #22 (
INFO  16:10:10,064 - #4 niz
INFO  16:10:10,064 - #44 [
INFO  16:10:10,064 - #2 1
INFO  16:10:10,064 - #45 ]
INFO  16:10:10,064 - #18 ,
INFO  16:10:10,064 - #4 niz
INFO  16:10:10,064 - #44 [
INFO  16:10:10,064 - #2 0
INFO  16:10:10,064 - #45 ]
INFO  16:10:10,064 - #23 )
INFO  16:10:10,064 - #32 *
INFO  16:10:10,064 - #4 a
INFO  16:10:10,064 - #30 +
INFO  16:10:10,064 - #2 1
INFO  16:10:10,064 - #37 ;
INFO  16:10:10,064 - #36 if
INFO  16:10:10,064 - #22 (
INFO  16:10:10,064 - #4 verify
INFO  16:10:10,064 - #22 (
INFO  16:10:10,064 - #23 )
INFO  16:10:10,065 - #50 ||
INFO  16:10:10,065 - #4 niz
INFO  16:10:10,065 - #44 [
INFO  16:10:10,065 - #2 2
INFO  16:10:10,065 - #45 ]
INFO  16:10:10,065 - #11 ==
INFO  16:10:10,065 - #2 4
INFO  16:10:10,065 - #23 )
INFO  16:10:10,065 - #25 print
INFO  16:10:10,065 - #22 (
INFO  16:10:10,065 - #4 ord
INFO  16:10:10,065 - #22 (
INFO  16:10:10,066 - #5 A
INFO  16:10:10,066 - #23 )
INFO  16:10:10,066 - #23 )
INFO  16:10:10,066 - #37 ;
INFO  16:10:10,066 - #51 else
INFO  16:10:10,066 - #25 print
INFO  16:10:10,066 - #22 (
INFO  16:10:10,066 - #4 ord
INFO  16:10:10,066 - #22 (
INFO  16:10:10,066 - #5 a
INFO  16:10:10,066 - #23 )
INFO  16:10:10,066 - #23 )
INFO  16:10:10,066 - #37 ;
INFO  16:10:10,066 - #25 print
INFO  16:10:10,066 - #22 (
INFO  16:10:10,066 - #4 eol
INFO  16:10:10,066 - #23 )
INFO  16:10:10,066 - #37 ;
INFO  16:10:10,066 - #4 i
INFO  16:10:10,066 - #10 =
INFO  16:10:10,066 - #2 0
INFO  16:10:10,066 - #37 ;
INFO  16:10:10,066 - #38 do
INFO  16:10:10,066 - #7 {
INFO  16:10:10,067 - #36 if
INFO  16:10:10,067 - #22 (
INFO  16:10:10,067 - #4 i
INFO  16:10:10,067 - #11 ==
INFO  16:10:10,067 - #2 3
INFO  16:10:10,067 - #23 )
INFO  16:10:10,067 - #7 {
INFO  16:10:10,067 - #4 i
INFO  16:10:10,067 - #46 ++
INFO  16:10:10,067 - #37 ;
INFO  16:10:10,067 - #41 continue
INFO  16:10:10,067 - #37 ;
INFO  16:10:10,067 - #8 }
INFO  16:10:10,068 - #36 if
INFO  16:10:10,068 - #22 (
INFO  16:10:10,068 - #4 i
INFO  16:10:10,068 - #11 ==
INFO  16:10:10,068 - #2 4
INFO  16:10:10,068 - #23 )
INFO  16:10:10,068 - #40 break
INFO  16:10:10,068 - #37 ;
INFO  16:10:10,068 - #4 i
INFO  16:10:10,068 - #10 =
INFO  16:10:10,068 - #4 inkrement
INFO  16:10:10,068 - #22 (
INFO  16:10:10,068 - #4 i
INFO  16:10:10,068 - #18 ,
INFO  16:10:10,068 - #2 1
INFO  16:10:10,068 - #23 )
INFO  16:10:10,068 - #37 ;
INFO  16:10:10,069 - #8 }
INFO  16:10:10,069 - #39 while
INFO  16:10:10,069 - #22 (
INFO  16:10:10,069 - #4 i
INFO  16:10:10,069 - #48 <
INFO  16:10:10,069 - #2 10
INFO  16:10:10,069 - #23 )
INFO  16:10:10,069 - #37 ;
INFO  16:10:10,069 - #36 if
INFO  16:10:10,069 - #22 (
INFO  16:10:10,069 - #4 i
INFO  16:10:10,069 - #11 ==
INFO  16:10:10,069 - #2 3
INFO  16:10:10,069 - #27 &&
INFO  16:10:10,069 - #4 verify
INFO  16:10:10,069 - #22 (
INFO  16:10:10,069 - #23 )
INFO  16:10:10,069 - #23 )
INFO  16:10:10,069 - #25 print
INFO  16:10:10,069 - #22 (
INFO  16:10:10,069 - #31 -
INFO  16:10:10,070 - #2 4
INFO  16:10:10,070 - #23 )
INFO  16:10:10,070 - #37 ;
INFO  16:10:10,070 - #51 else
INFO  16:10:10,070 - #25 print
INFO  16:10:10,070 - #22 (
INFO  16:10:10,070 - #2 4
INFO  16:10:10,070 - #23 )
INFO  16:10:10,070 - #37 ;
INFO  16:10:10,070 - #43 read
INFO  16:10:10,070 - #22 (
INFO  16:10:10,070 - #4 niz
INFO  16:10:10,070 - #44 [
INFO  16:10:10,070 - #2 0
INFO  16:10:10,070 - #45 ]
INFO  16:10:10,070 - #23 )
INFO  16:10:10,070 - #37 ;
INFO  16:10:10,070 - #43 read
INFO  16:10:10,070 - #22 (
INFO  16:10:10,070 - #4 niz
INFO  16:10:10,070 - #44 [
INFO  16:10:10,070 - #2 1
INFO  16:10:10,070 - #45 ]
INFO  16:10:10,070 - #23 )
INFO  16:10:10,070 - #37 ;
INFO  16:10:10,070 - #43 read
INFO  16:10:10,071 - #22 (
INFO  16:10:10,071 - #4 niz
INFO  16:10:10,071 - #44 [
INFO  16:10:10,071 - #2 2
INFO  16:10:10,071 - #45 ]
INFO  16:10:10,071 - #23 )
INFO  16:10:10,071 - #37 ;
INFO  16:10:10,071 - #25 print
INFO  16:10:10,071 - #22 (
INFO  16:10:10,071 - #4 eol
INFO  16:10:10,071 - #23 )
INFO  16:10:10,071 - #37 ;
INFO  16:10:10,071 - #40 break
INFO  16:10:10,071 - #37 ;
INFO  16:10:10,071 - #25 print
INFO  16:10:10,071 - #22 (
INFO  16:10:10,071 - #4 sum
INFO  16:10:10,071 - #22 (
INFO  16:10:10,071 - #4 sum
INFO  16:10:10,071 - #22 (
INFO  16:10:10,071 - #4 niz
INFO  16:10:10,071 - #44 [
INFO  16:10:10,071 - #2 0
INFO  16:10:10,071 - #45 ]
INFO  16:10:10,071 - #18 ,
INFO  16:10:10,071 - #4 niz
INFO  16:10:10,071 - #44 [
INFO  16:10:10,071 - #2 1
INFO  16:10:10,071 - #45 ]
INFO  16:10:10,071 - #23 )
INFO  16:10:10,071 - #18 ,
INFO  16:10:10,072 - #4 niz
INFO  16:10:10,072 - #44 [
INFO  16:10:10,072 - #2 2
INFO  16:10:10,072 - #45 ]
INFO  16:10:10,072 - #23 )
INFO  16:10:10,072 - #23 )
INFO  16:10:10,072 - #37 ;
INFO  16:10:10,072 - #25 print
INFO  16:10:10,072 - #22 (
INFO  16:10:10,072 - #4 eol
INFO  16:10:10,072 - #23 )
INFO  16:10:10,072 - #37 ;
INFO  16:10:10,072 - #25 print
INFO  16:10:10,072 - #22 (
INFO  16:10:10,072 - #4 inkrement
INFO  16:10:10,072 - #22 (
INFO  16:10:10,072 - #4 niz
INFO  16:10:10,072 - #44 [
INFO  16:10:10,072 - #2 2
INFO  16:10:10,072 - #45 ]
INFO  16:10:10,072 - #18 ,
INFO  16:10:10,072 - #2 2
INFO  16:10:10,072 - #23 )
INFO  16:10:10,072 - #23 )
INFO  16:10:10,072 - #37 ;
INFO  16:10:10,072 - #4 a
INFO  16:10:10,072 - #10 =
INFO  16:10:10,072 - #2 3
INFO  16:10:10,072 - #37 ;
INFO  16:10:10,073 - #4 i
INFO  16:10:10,073 - #10 =
INFO  16:10:10,073 - #2 0
INFO  16:10:10,073 - #37 ;
INFO  16:10:10,073 - #38 do
INFO  16:10:10,073 - #7 {
INFO  16:10:10,073 - #4 niz
INFO  16:10:10,073 - #44 [
INFO  16:10:10,073 - #4 i
INFO  16:10:10,073 - #45 ]
INFO  16:10:10,073 - #10 =
INFO  16:10:10,073 - #4 niz
INFO  16:10:10,073 - #44 [
INFO  16:10:10,073 - #4 i
INFO  16:10:10,073 - #45 ]
INFO  16:10:10,073 - #32 *
INFO  16:10:10,073 - #2 2
INFO  16:10:10,073 - #32 *
INFO  16:10:10,073 - #4 a
INFO  16:10:10,073 - #37 ;
INFO  16:10:10,073 - #4 i
INFO  16:10:10,073 - #46 ++
INFO  16:10:10,073 - #37 ;
INFO  16:10:10,073 - #8 }
INFO  16:10:10,073 - #39 while
INFO  16:10:10,073 - #22 (
INFO  16:10:10,073 - #4 i
INFO  16:10:10,073 - #48 <
INFO  16:10:10,073 - #2 3
INFO  16:10:10,073 - #23 )
INFO  16:10:10,073 - #37 ;
INFO  16:10:10,073 - #25 print
INFO  16:10:10,073 - #22 (
INFO  16:10:10,074 - #4 niz
INFO  16:10:10,074 - #44 [
INFO  16:10:10,074 - #2 0
INFO  16:10:10,074 - #45 ]
INFO  16:10:10,074 - #23 )
INFO  16:10:10,074 - #37 ;
INFO  16:10:10,074 - #25 print
INFO  16:10:10,074 - #22 (
INFO  16:10:10,074 - #4 niz
INFO  16:10:10,074 - #44 [
INFO  16:10:10,074 - #2 1
INFO  16:10:10,074 - #45 ]
INFO  16:10:10,074 - #23 )
INFO  16:10:10,074 - #37 ;
INFO  16:10:10,074 - #25 print
INFO  16:10:10,074 - #22 (
INFO  16:10:10,074 - #4 niz
INFO  16:10:10,074 - #44 [
INFO  16:10:10,074 - #2 2
INFO  16:10:10,074 - #45 ]
INFO  16:10:10,074 - #23 )
INFO  16:10:10,074 - #37 ;
INFO  16:10:10,074 - #25 print
INFO  16:10:10,074 - #22 (
INFO  16:10:10,074 - #4 eol
INFO  16:10:10,074 - #23 )
INFO  16:10:10,074 - #37 ;
INFO  16:10:10,074 - #4 i
INFO  16:10:10,074 - #10 =
INFO  16:10:10,074 - #2 0
INFO  16:10:10,074 - #37 ;
INFO  16:10:10,074 - #4 niz2
INFO  16:10:10,074 - #10 =
INFO  16:10:10,074 - #2 0
INFO  16:10:10,075 - #37 ;
INFO  16:10:10,075 - #38 do
INFO  16:10:10,075 - #7 {
INFO  16:10:10,075 - #4 niz2
INFO  16:10:10,075 - #10 =
INFO  16:10:10,075 - #4 niz2
INFO  16:10:10,075 - #30 +
INFO  16:10:10,075 - #4 niz
INFO  16:10:10,075 - #44 [
INFO  16:10:10,075 - #4 i
INFO  16:10:10,075 - #45 ]
INFO  16:10:10,075 - #32 *
INFO  16:10:10,075 - #4 niz
INFO  16:10:10,075 - #44 [
INFO  16:10:10,075 - #4 i
INFO  16:10:10,075 - #45 ]
INFO  16:10:10,075 - #37 ;
INFO  16:10:10,075 - #4 i
INFO  16:10:10,075 - #46 ++
INFO  16:10:10,075 - #37 ;
INFO  16:10:10,075 - #8 }
INFO  16:10:10,075 - #39 while
INFO  16:10:10,075 - #22 (
INFO  16:10:10,075 - #4 i
INFO  16:10:10,075 - #48 <
INFO  16:10:10,075 - #2 3
INFO  16:10:10,075 - #23 )
INFO  16:10:10,075 - #37 ;
INFO  16:10:10,075 - #25 print
INFO  16:10:10,075 - #22 (
INFO  16:10:10,076 - #4 niz2
INFO  16:10:10,076 - #23 )
INFO  16:10:10,076 - #37 ;
INFO  16:10:10,076 - #25 print
INFO  16:10:10,076 - #22 (
INFO  16:10:10,076 - #4 eol
INFO  16:10:10,076 - #23 )
INFO  16:10:10,076 - #37 ;
INFO  16:10:10,076 - #8 }
INFO  16:10:10,076 - #8 }
INFO  16:10:10,080 - ===================================
INFO  16:10:10,090 - Pronadjen poziv funkcije sum na liniji 28
INFO  16:10:10,090 - Obradjuje se funkcija main na liniji 36
INFO  16:10:12,353 - Pronadjen poziv funkcije sum na liniji 56
INFO  16:10:12,353 - Pronadjen poziv funkcije verify na liniji 57
INFO  16:10:12,353 - Pronadjen poziv funkcije ord na liniji 57
INFO  16:10:12,353 - Pronadjen poziv funkcije ord na liniji 58
INFO  16:10:17,582 - Pronadjen poziv funkcije inkrement na liniji 69
