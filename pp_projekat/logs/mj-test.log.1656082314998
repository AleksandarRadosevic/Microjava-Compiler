INFO  16:51:20,535 - Compiling source file: C:\Users\Aleksandar\Desktop\PP\projekat\PP_Projekat\pp_projekat\test\program.mj
INFO  16:51:20,594 - #6 program
INFO  16:51:20,594 - #4 test302
INFO  16:51:20,594 - #9 const
INFO  16:51:20,595 - #4 int
INFO  16:51:20,595 - #4 jedan
INFO  16:51:20,595 - #10 =
INFO  16:51:20,595 - #2 1
INFO  16:51:20,595 - #37 ;
INFO  16:51:20,596 - #4 int
INFO  16:51:20,596 - #4 i
INFO  16:51:20,596 - #37 ;
INFO  16:51:20,597 - #4 bool
INFO  16:51:20,598 - #4 ibool
INFO  16:51:20,598 - #37 ;
INFO  16:51:20,598 - #4 int
INFO  16:51:20,598 - #4 niz2
INFO  16:51:20,598 - #37 ;
INFO  16:51:20,598 - #4 int
INFO  16:51:20,598 - #4 niz
INFO  16:51:20,598 - #44 [
INFO  16:51:20,598 - #45 ]
INFO  16:51:20,598 - #37 ;
INFO  16:51:20,599 - #4 int
INFO  16:51:20,599 - #4 a
INFO  16:51:20,599 - #37 ;
INFO  16:51:20,599 - #7 {
INFO  16:51:20,599 - #4 int
INFO  16:51:20,599 - #4 sum
INFO  16:51:20,599 - #22 (
INFO  16:51:20,600 - #4 int
INFO  16:51:20,600 - #4 z
INFO  16:51:20,600 - #18 ,
INFO  16:51:20,600 - #4 int
INFO  16:51:20,600 - #4 d
INFO  16:51:20,600 - #23 )
INFO  16:51:20,600 - #7 {
INFO  16:51:20,601 - #42 return
INFO  16:51:20,601 - #4 z
INFO  16:51:20,602 - #30 +
INFO  16:51:20,604 - #4 d
INFO  16:51:20,605 - #37 ;
INFO  16:51:20,605 - #8 }
INFO  16:51:20,606 - #4 int
INFO  16:51:20,606 - #4 inkrement
INFO  16:51:20,606 - #22 (
INFO  16:51:20,606 - #4 int
INFO  16:51:20,606 - #4 a
INFO  16:51:20,606 - #18 ,
INFO  16:51:20,606 - #4 int
INFO  16:51:20,606 - #4 inc
INFO  16:51:20,606 - #23 )
INFO  16:51:20,606 - #4 int
INFO  16:51:20,606 - #4 pom
INFO  16:51:20,606 - #37 ;
INFO  16:51:20,607 - #7 {
INFO  16:51:20,607 - #36 if
INFO  16:51:20,607 - #22 (
INFO  16:51:20,607 - #4 inc
INFO  16:51:20,607 - #11 ==
INFO  16:51:20,607 - #4 jedan
INFO  16:51:20,608 - #23 )
INFO  16:51:20,609 - #4 pom
INFO  16:51:20,609 - #10 =
INFO  16:51:20,609 - #2 1
INFO  16:51:20,610 - #37 ;
INFO  16:51:20,610 - #51 else
INFO  16:51:20,610 - #36 if
INFO  16:51:20,610 - #22 (
INFO  16:51:20,610 - #4 inc
INFO  16:51:20,610 - #11 ==
INFO  16:51:20,610 - #2 2
INFO  16:51:20,610 - #23 )
INFO  16:51:20,610 - #4 pom
INFO  16:51:20,610 - #10 =
INFO  16:51:20,611 - #4 a
INFO  16:51:20,611 - #37 ;
INFO  16:51:20,611 - #42 return
INFO  16:51:20,611 - #4 sum
INFO  16:51:20,611 - #22 (
INFO  16:51:20,611 - #4 a
INFO  16:51:20,611 - #18 ,
INFO  16:51:20,612 - #4 pom
INFO  16:51:20,612 - #23 )
INFO  16:51:20,612 - #37 ;
INFO  16:51:20,612 - #8 }
INFO  16:51:20,612 - #4 bool
INFO  16:51:20,612 - #4 verify
INFO  16:51:20,612 - #22 (
INFO  16:51:20,612 - #23 )
INFO  16:51:20,612 - #7 {
INFO  16:51:20,613 - #25 print
INFO  16:51:20,613 - #22 (
INFO  16:51:20,613 - #5 v
INFO  16:51:20,613 - #23 )
INFO  16:51:20,613 - #37 ;
INFO  16:51:20,614 - #42 return
INFO  16:51:20,614 - #3 false
INFO  16:51:20,614 - #37 ;
INFO  16:51:20,614 - #8 }
INFO  16:51:20,614 - #24 void
INFO  16:51:20,614 - #4 main
INFO  16:51:20,614 - #22 (
INFO  16:51:20,614 - #23 )
INFO  16:51:20,614 - #7 {
INFO  16:51:20,614 - #4 sum
INFO  16:51:20,614 - #22 (
INFO  16:51:20,614 - #2 1
INFO  16:51:20,614 - #18 ,
INFO  16:51:20,614 - #2 2
INFO  16:51:20,614 - #23 )
INFO  16:51:20,615 - #37 ;
INFO  16:51:20,615 - #36 if
INFO  16:51:20,615 - #22 (
INFO  16:51:20,615 - #2 1
INFO  16:51:20,615 - #12 !=
INFO  16:51:20,615 - #2 1
INFO  16:51:20,615 - #23 )
INFO  16:51:20,615 - #25 print
INFO  16:51:20,615 - #22 (
INFO  16:51:20,615 - #31 -
INFO  16:51:20,616 - #2 6
INFO  16:51:20,616 - #23 )
INFO  16:51:20,616 - #37 ;
INFO  16:51:20,616 - #51 else
INFO  16:51:20,616 - #25 print
INFO  16:51:20,616 - #22 (
INFO  16:51:20,616 - #2 0
INFO  16:51:20,616 - #23 )
INFO  16:51:20,616 - #37 ;
INFO  16:51:20,616 - #4 ibool
INFO  16:51:20,616 - #10 =
INFO  16:51:20,616 - #3 false
INFO  16:51:20,616 - #37 ;
INFO  16:51:20,616 - #4 i
INFO  16:51:20,616 - #10 =
INFO  16:51:20,616 - #2 0
INFO  16:51:20,616 - #37 ;
INFO  16:51:20,616 - #38 do
INFO  16:51:20,617 - #7 {
INFO  16:51:20,617 - #36 if
INFO  16:51:20,617 - #22 (
INFO  16:51:20,617 - #4 i
INFO  16:51:20,617 - #11 ==
INFO  16:51:20,617 - #2 2
INFO  16:51:20,617 - #23 )
INFO  16:51:20,617 - #4 ibool
INFO  16:51:20,617 - #10 =
INFO  16:51:20,617 - #3 true
INFO  16:51:20,617 - #37 ;
INFO  16:51:20,617 - #4 i
INFO  16:51:20,617 - #46 ++
INFO  16:51:20,617 - #37 ;
INFO  16:51:20,617 - #8 }
INFO  16:51:20,617 - #39 while
INFO  16:51:20,617 - #22 (
INFO  16:51:20,618 - #4 i
INFO  16:51:20,618 - #48 <
INFO  16:51:20,618 - #2 5
INFO  16:51:20,618 - #23 )
INFO  16:51:20,618 - #37 ;
INFO  16:51:20,618 - #36 if
INFO  16:51:20,618 - #22 (
INFO  16:51:20,618 - #4 ibool
INFO  16:51:20,618 - #23 )
INFO  16:51:20,619 - #36 if
INFO  16:51:20,619 - #22 (
INFO  16:51:20,619 - #4 i
INFO  16:51:20,619 - #11 ==
INFO  16:51:20,619 - #2 5
INFO  16:51:20,619 - #23 )
INFO  16:51:20,619 - #25 print
INFO  16:51:20,619 - #22 (
INFO  16:51:20,619 - #2 1
INFO  16:51:20,619 - #23 )
INFO  16:51:20,619 - #37 ;
INFO  16:51:20,619 - #51 else
INFO  16:51:20,619 - #25 print
INFO  16:51:20,619 - #22 (
INFO  16:51:20,619 - #31 -
INFO  16:51:20,620 - #2 1
INFO  16:51:20,620 - #23 )
INFO  16:51:20,620 - #37 ;
INFO  16:51:20,620 - #4 a
INFO  16:51:20,620 - #10 =
INFO  16:51:20,620 - #2 2
INFO  16:51:20,620 - #37 ;
INFO  16:51:20,620 - #4 niz
INFO  16:51:20,620 - #10 =
INFO  16:51:20,620 - #28 new
INFO  16:51:20,620 - #4 int
INFO  16:51:20,620 - #44 [
INFO  16:51:20,620 - #2 3
INFO  16:51:20,620 - #45 ]
INFO  16:51:20,620 - #37 ;
INFO  16:51:20,620 - #4 niz
INFO  16:51:20,620 - #44 [
INFO  16:51:20,620 - #2 0
INFO  16:51:20,620 - #45 ]
INFO  16:51:20,620 - #10 =
INFO  16:51:20,621 - #2 1
INFO  16:51:20,621 - #32 *
INFO  16:51:20,621 - #4 a
INFO  16:51:20,621 - #37 ;
INFO  16:51:20,622 - #4 niz
INFO  16:51:20,622 - #44 [
INFO  16:51:20,622 - #2 1
INFO  16:51:20,622 - #45 ]
INFO  16:51:20,622 - #10 =
INFO  16:51:20,622 - #2 2
INFO  16:51:20,622 - #32 *
INFO  16:51:20,622 - #4 a
INFO  16:51:20,622 - #37 ;
INFO  16:51:20,622 - #4 niz
INFO  16:51:20,622 - #44 [
INFO  16:51:20,622 - #2 2
INFO  16:51:20,622 - #45 ]
INFO  16:51:20,622 - #10 =
INFO  16:51:20,622 - #4 sum
INFO  16:51:20,622 - #22 (
INFO  16:51:20,622 - #4 niz
INFO  16:51:20,622 - #44 [
INFO  16:51:20,622 - #2 1
INFO  16:51:20,622 - #45 ]
INFO  16:51:20,622 - #18 ,
INFO  16:51:20,622 - #4 niz
INFO  16:51:20,622 - #44 [
INFO  16:51:20,622 - #2 0
INFO  16:51:20,623 - #45 ]
INFO  16:51:20,623 - #23 )
INFO  16:51:20,623 - #32 *
INFO  16:51:20,623 - #4 a
INFO  16:51:20,623 - #30 +
INFO  16:51:20,623 - #2 1
INFO  16:51:20,623 - #37 ;
INFO  16:51:20,623 - #36 if
INFO  16:51:20,623 - #22 (
INFO  16:51:20,623 - #4 verify
INFO  16:51:20,623 - #22 (
INFO  16:51:20,623 - #23 )
INFO  16:51:20,623 - #50 ||
INFO  16:51:20,623 - #4 niz
INFO  16:51:20,623 - #44 [
INFO  16:51:20,624 - #2 2
INFO  16:51:20,624 - #45 ]
INFO  16:51:20,624 - #11 ==
INFO  16:51:20,624 - #2 4
INFO  16:51:20,624 - #23 )
INFO  16:51:20,624 - #25 print
INFO  16:51:20,624 - #22 (
INFO  16:51:20,624 - #4 ord
INFO  16:51:20,624 - #22 (
INFO  16:51:20,624 - #5 A
INFO  16:51:20,624 - #23 )
INFO  16:51:20,624 - #23 )
INFO  16:51:20,624 - #37 ;
INFO  16:51:20,624 - #51 else
INFO  16:51:20,624 - #25 print
INFO  16:51:20,625 - #22 (
INFO  16:51:20,625 - #4 ord
INFO  16:51:20,625 - #22 (
INFO  16:51:20,625 - #5 a
INFO  16:51:20,625 - #23 )
INFO  16:51:20,625 - #23 )
INFO  16:51:20,625 - #37 ;
INFO  16:51:20,625 - #25 print
INFO  16:51:20,625 - #22 (
INFO  16:51:20,625 - #4 eol
INFO  16:51:20,625 - #23 )
INFO  16:51:20,625 - #37 ;
INFO  16:51:20,625 - #4 i
INFO  16:51:20,625 - #10 =
INFO  16:51:20,625 - #2 0
INFO  16:51:20,625 - #37 ;
INFO  16:51:20,625 - #38 do
INFO  16:51:20,625 - #7 {
INFO  16:51:20,625 - #36 if
INFO  16:51:20,625 - #22 (
INFO  16:51:20,625 - #4 i
INFO  16:51:20,625 - #11 ==
INFO  16:51:20,625 - #2 3
INFO  16:51:20,625 - #23 )
INFO  16:51:20,625 - #7 {
INFO  16:51:20,625 - #4 i
INFO  16:51:20,625 - #46 ++
INFO  16:51:20,625 - #37 ;
INFO  16:51:20,626 - #41 continue
INFO  16:51:20,626 - #37 ;
INFO  16:51:20,626 - #8 }
INFO  16:51:20,626 - #36 if
INFO  16:51:20,626 - #22 (
INFO  16:51:20,626 - #4 i
INFO  16:51:20,626 - #11 ==
INFO  16:51:20,626 - #2 4
INFO  16:51:20,626 - #23 )
INFO  16:51:20,626 - #40 break
INFO  16:51:20,626 - #37 ;
INFO  16:51:20,626 - #4 i
INFO  16:51:20,627 - #10 =
INFO  16:51:20,627 - #4 inkrement
INFO  16:51:20,627 - #22 (
INFO  16:51:20,627 - #4 i
INFO  16:51:20,627 - #18 ,
INFO  16:51:20,627 - #2 1
INFO  16:51:20,627 - #23 )
INFO  16:51:20,627 - #37 ;
INFO  16:51:20,627 - #8 }
INFO  16:51:20,627 - #39 while
INFO  16:51:20,627 - #22 (
INFO  16:51:20,627 - #4 i
INFO  16:51:20,627 - #48 <
INFO  16:51:20,627 - #2 10
INFO  16:51:20,627 - #23 )
INFO  16:51:20,627 - #37 ;
INFO  16:51:20,627 - #36 if
INFO  16:51:20,627 - #22 (
INFO  16:51:20,627 - #4 i
INFO  16:51:20,627 - #11 ==
INFO  16:51:20,627 - #2 3
INFO  16:51:20,628 - #27 &&
INFO  16:51:20,628 - #4 verify
INFO  16:51:20,628 - #22 (
INFO  16:51:20,628 - #23 )
INFO  16:51:20,628 - #23 )
INFO  16:51:20,628 - #25 print
INFO  16:51:20,628 - #22 (
INFO  16:51:20,628 - #31 -
INFO  16:51:20,628 - #2 4
INFO  16:51:20,628 - #23 )
INFO  16:51:20,628 - #37 ;
INFO  16:51:20,628 - #51 else
INFO  16:51:20,628 - #25 print
INFO  16:51:20,628 - #22 (
INFO  16:51:20,628 - #2 4
INFO  16:51:20,628 - #23 )
INFO  16:51:20,628 - #37 ;
INFO  16:51:20,628 - #43 read
INFO  16:51:20,628 - #22 (
INFO  16:51:20,628 - #4 niz
INFO  16:51:20,628 - #44 [
INFO  16:51:20,628 - #2 0
INFO  16:51:20,628 - #45 ]
INFO  16:51:20,628 - #23 )
INFO  16:51:20,628 - #37 ;
INFO  16:51:20,628 - #43 read
INFO  16:51:20,629 - #22 (
INFO  16:51:20,629 - #4 niz
INFO  16:51:20,629 - #44 [
INFO  16:51:20,629 - #2 1
INFO  16:51:20,629 - #45 ]
INFO  16:51:20,629 - #23 )
INFO  16:51:20,629 - #37 ;
INFO  16:51:20,629 - #43 read
INFO  16:51:20,629 - #22 (
INFO  16:51:20,629 - #4 niz
INFO  16:51:20,629 - #44 [
INFO  16:51:20,629 - #2 2
INFO  16:51:20,629 - #45 ]
INFO  16:51:20,629 - #23 )
INFO  16:51:20,629 - #37 ;
INFO  16:51:20,629 - #25 print
INFO  16:51:20,629 - #22 (
INFO  16:51:20,629 - #4 eol
INFO  16:51:20,629 - #23 )
INFO  16:51:20,629 - #37 ;
INFO  16:51:20,629 - #40 break
INFO  16:51:20,629 - #37 ;
INFO  16:51:20,629 - #25 print
INFO  16:51:20,629 - #22 (
INFO  16:51:20,629 - #4 sum
INFO  16:51:20,629 - #22 (
INFO  16:51:20,629 - #4 sum
INFO  16:51:20,629 - #22 (
INFO  16:51:20,629 - #4 niz
INFO  16:51:20,629 - #44 [
INFO  16:51:20,629 - #2 0
INFO  16:51:20,629 - #45 ]
INFO  16:51:20,629 - #18 ,
INFO  16:51:20,629 - #4 niz
INFO  16:51:20,629 - #44 [
INFO  16:51:20,630 - #2 1
INFO  16:51:20,630 - #45 ]
INFO  16:51:20,630 - #23 )
INFO  16:51:20,630 - #18 ,
INFO  16:51:20,630 - #4 niz
INFO  16:51:20,630 - #44 [
INFO  16:51:20,630 - #2 2
INFO  16:51:20,630 - #45 ]
INFO  16:51:20,630 - #23 )
INFO  16:51:20,630 - #23 )
INFO  16:51:20,630 - #37 ;
INFO  16:51:20,630 - #25 print
INFO  16:51:20,630 - #22 (
INFO  16:51:20,630 - #4 eol
INFO  16:51:20,630 - #23 )
INFO  16:51:20,630 - #37 ;
INFO  16:51:20,630 - #25 print
INFO  16:51:20,630 - #22 (
INFO  16:51:20,630 - #4 inkrement
INFO  16:51:20,630 - #22 (
INFO  16:51:20,630 - #4 niz
INFO  16:51:20,630 - #44 [
INFO  16:51:20,630 - #2 2
INFO  16:51:20,630 - #45 ]
INFO  16:51:20,630 - #18 ,
INFO  16:51:20,630 - #2 2
INFO  16:51:20,630 - #23 )
INFO  16:51:20,630 - #23 )
INFO  16:51:20,630 - #37 ;
INFO  16:51:20,630 - #4 a
INFO  16:51:20,630 - #10 =
INFO  16:51:20,631 - #2 3
INFO  16:51:20,631 - #37 ;
INFO  16:51:20,631 - #4 i
INFO  16:51:20,631 - #10 =
INFO  16:51:20,631 - #2 0
INFO  16:51:20,631 - #37 ;
INFO  16:51:20,631 - #38 do
INFO  16:51:20,631 - #7 {
INFO  16:51:20,631 - #4 niz
INFO  16:51:20,631 - #44 [
INFO  16:51:20,631 - #4 i
INFO  16:51:20,631 - #45 ]
INFO  16:51:20,631 - #10 =
INFO  16:51:20,631 - #4 niz
INFO  16:51:20,631 - #44 [
INFO  16:51:20,631 - #4 i
INFO  16:51:20,631 - #45 ]
INFO  16:51:20,631 - #32 *
INFO  16:51:20,631 - #2 2
INFO  16:51:20,631 - #32 *
INFO  16:51:20,631 - #4 a
INFO  16:51:20,631 - #37 ;
INFO  16:51:20,631 - #4 i
INFO  16:51:20,631 - #46 ++
INFO  16:51:20,631 - #37 ;
INFO  16:51:20,631 - #8 }
INFO  16:51:20,631 - #39 while
INFO  16:51:20,631 - #22 (
INFO  16:51:20,631 - #4 i
INFO  16:51:20,631 - #48 <
INFO  16:51:20,632 - #2 3
INFO  16:51:20,632 - #23 )
INFO  16:51:20,632 - #37 ;
INFO  16:51:20,632 - #25 print
INFO  16:51:20,632 - #22 (
INFO  16:51:20,632 - #4 niz
INFO  16:51:20,632 - #44 [
INFO  16:51:20,632 - #2 0
INFO  16:51:20,632 - #45 ]
INFO  16:51:20,632 - #23 )
INFO  16:51:20,632 - #37 ;
INFO  16:51:20,632 - #25 print
INFO  16:51:20,632 - #22 (
INFO  16:51:20,632 - #4 niz
INFO  16:51:20,632 - #44 [
INFO  16:51:20,632 - #2 1
INFO  16:51:20,632 - #45 ]
INFO  16:51:20,632 - #23 )
INFO  16:51:20,632 - #37 ;
INFO  16:51:20,632 - #25 print
INFO  16:51:20,633 - #22 (
INFO  16:51:20,633 - #4 niz
INFO  16:51:20,633 - #44 [
INFO  16:51:20,633 - #2 2
INFO  16:51:20,633 - #45 ]
INFO  16:51:20,633 - #23 )
INFO  16:51:20,633 - #37 ;
INFO  16:51:20,633 - #25 print
INFO  16:51:20,633 - #22 (
INFO  16:51:20,633 - #4 eol
INFO  16:51:20,633 - #23 )
INFO  16:51:20,633 - #37 ;
INFO  16:51:20,633 - #4 i
INFO  16:51:20,633 - #10 =
INFO  16:51:20,633 - #2 0
INFO  16:51:20,633 - #37 ;
INFO  16:51:20,633 - #4 niz2
INFO  16:51:20,633 - #10 =
INFO  16:51:20,633 - #2 0
INFO  16:51:20,633 - #37 ;
INFO  16:51:20,633 - #38 do
INFO  16:51:20,633 - #7 {
INFO  16:51:20,633 - #4 niz2
INFO  16:51:20,633 - #10 =
INFO  16:51:20,633 - #4 niz2
INFO  16:51:20,633 - #30 +
INFO  16:51:20,633 - #4 niz
INFO  16:51:20,633 - #44 [
INFO  16:51:20,633 - #4 i
INFO  16:51:20,633 - #45 ]
INFO  16:51:20,633 - #32 *
INFO  16:51:20,633 - #4 niz
INFO  16:51:20,633 - #44 [
INFO  16:51:20,633 - #4 i
INFO  16:51:20,633 - #45 ]
INFO  16:51:20,633 - #37 ;
INFO  16:51:20,634 - #4 i
INFO  16:51:20,634 - #46 ++
INFO  16:51:20,634 - #37 ;
INFO  16:51:20,634 - #8 }
INFO  16:51:20,634 - #39 while
INFO  16:51:20,634 - #22 (
INFO  16:51:20,634 - #4 i
INFO  16:51:20,634 - #48 <
INFO  16:51:20,634 - #2 3
INFO  16:51:20,634 - #23 )
INFO  16:51:20,634 - #37 ;
INFO  16:51:20,634 - #25 print
INFO  16:51:20,634 - #22 (
INFO  16:51:20,634 - #4 niz2
INFO  16:51:20,634 - #23 )
INFO  16:51:20,634 - #37 ;
INFO  16:51:20,634 - #25 print
INFO  16:51:20,634 - #22 (
INFO  16:51:20,634 - #4 eol
INFO  16:51:20,634 - #23 )
INFO  16:51:20,634 - #37 ;
INFO  16:51:20,634 - #8 }
INFO  16:51:20,634 - #8 }
INFO  16:51:20,639 - ===================================
INFO  16:51:41,708 - Pronadjen poziv funkcije sum na liniji 28
INFO  16:51:41,708 - Obradjuje se funkcija main na liniji 36
INFO  16:51:41,709 - Pronadjen poziv funkcije sum na liniji 56
INFO  16:51:41,709 - Pronadjen poziv funkcije verify na liniji 57
INFO  16:51:41,709 - Pronadjen poziv funkcije ord na liniji 57
INFO  16:51:41,709 - Pronadjen poziv funkcije ord na liniji 58
INFO  16:51:41,709 - Pronadjen poziv funkcije inkrement na liniji 69
INFO  16:51:41,709 - Gotovo izvrsavanje petlje na liniji 62
INFO  16:51:41,709 - Pronadjen poziv funkcije verify na liniji 72
INFO  16:51:45,510 - Pronadjen poziv funkcije sum na liniji 80
INFO  16:51:45,510 - Pronadjen poziv funkcije sum na liniji 80
INFO  16:51:45,510 - Pronadjen poziv funkcije inkrement na liniji 83
ERROR 16:51:45,510 - Break iskaz se poziva samo unutar do while petlje na liniji 87
ERROR 16:51:45,510 - Continue iskaz se mora nalaziti unutar do while petlje na liniji 87
INFO  16:51:45,510 -  Print count calls = 20
INFO  16:51:45,510 -  Deklarisanih promenljivih ima = 1
INFO  16:51:45,510 - ===================================
