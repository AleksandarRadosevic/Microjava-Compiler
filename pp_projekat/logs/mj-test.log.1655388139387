INFO  16:02:10,147 - Compiling source file: C:\Users\Aleksandar\Desktop\PP\projekat\PP_Projekat\pp_projekat\test\program.mj
INFO  16:02:10,150 - #1 program
INFO  16:02:10,150 - #21 Program
INFO  16:02:10,151 - #3 class
INFO  16:02:10,151 - #21 A
INFO  16:02:10,151 - #49 {
INFO  16:02:10,151 - #21 int
INFO  16:02:10,151 - #21 x
INFO  16:02:10,151 - #47 [
INFO  16:02:10,151 - #48 ]
INFO  16:02:10,151 - #43 ,
INFO  16:02:10,151 - #21 y
INFO  16:02:10,151 - #47 [
INFO  16:02:10,151 - #48 ]
INFO  16:02:10,151 - #41 ;
INFO  16:02:10,152 - #50 }
INFO  16:02:10,152 - #6 const
INFO  16:02:10,152 - #21 int
INFO  16:02:10,152 - #21 pi
INFO  16:02:10,152 - #38 =
INFO  16:02:10,152 - #22 3
INFO  16:02:10,152 - #43 ,
INFO  16:02:10,152 - #21 e
INFO  16:02:10,152 - #38 =
INFO  16:02:10,152 - #22 2
INFO  16:02:10,153 - #41 ;
INFO  16:02:10,153 - #3 class
INFO  16:02:10,153 - #21 B
INFO  16:02:10,153 - #15 extends
INFO  16:02:10,153 - #21 A
INFO  16:02:10,153 - #49 {
INFO  16:02:10,153 - #21 int
INFO  16:02:10,153 - #21 i
INFO  16:02:10,153 - #41 ;
INFO  16:02:10,153 - #49 {
INFO  16:02:10,153 - #21 int
INFO  16:02:10,153 - #21 getValue
INFO  16:02:10,153 - #45 (
INFO  16:02:10,153 - #21 int
INFO  16:02:10,153 - #21 a
INFO  16:02:10,153 - #46 )
INFO  16:02:10,153 - #21 int
INFO  16:02:10,153 - #21 b
INFO  16:02:10,153 - #41 ;
INFO  16:02:10,153 - #21 bool
INFO  16:02:10,153 - #21 c
INFO  16:02:10,153 - #41 ;
INFO  16:02:10,154 - #49 {
INFO  16:02:10,154 - #13 return
INFO  16:02:10,154 - #17 this
INFO  16:02:10,154 - #44 .
INFO  16:02:10,154 - #21 i
INFO  16:02:10,154 - #25 +
INFO  16:02:10,154 - #17 this
INFO  16:02:10,154 - #44 .
INFO  16:02:10,154 - #21 x
INFO  16:02:10,154 - #47 [
INFO  16:02:10,154 - #22 0
INFO  16:02:10,154 - #48 ]
INFO  16:02:10,154 - #25 +
INFO  16:02:10,154 - #21 a
INFO  16:02:10,154 - #41 ;
INFO  16:02:10,154 - #50 }
INFO  16:02:10,154 - #14 void
INFO  16:02:10,154 - #21 m
INFO  16:02:10,154 - #45 (
INFO  16:02:10,155 - #46 )
INFO  16:02:10,155 - #49 {
INFO  16:02:10,155 - #50 }
INFO  16:02:10,155 - #50 }
INFO  16:02:10,155 - #50 }
INFO  16:02:10,155 - #3 class
INFO  16:02:10,155 - #21 C
INFO  16:02:10,155 - #15 extends
INFO  16:02:10,155 - #21 B
INFO  16:02:10,155 - #49 {
INFO  16:02:10,155 - #21 A
INFO  16:02:10,155 - #21 theA
INFO  16:02:10,155 - #41 ;
INFO  16:02:10,155 - #21 int
INFO  16:02:10,155 - #21 a
INFO  16:02:10,155 - #41 ;
INFO  16:02:10,155 - #50 }
INFO  16:02:10,155 - #49 {
INFO  16:02:10,155 - #14 void
INFO  16:02:10,155 - #21 main
INFO  16:02:10,155 - #45 (
INFO  16:02:10,156 - #46 )
INFO  16:02:10,156 - #21 A
INFO  16:02:10,156 - #21 a
INFO  16:02:10,156 - #41 ;
INFO  16:02:10,156 - #21 C
INFO  16:02:10,156 - #21 c
INFO  16:02:10,156 - #41 ;
INFO  16:02:10,156 - #21 int
INFO  16:02:10,156 - #21 i
INFO  16:02:10,156 - #41 ;
INFO  16:02:10,156 - #21 int
INFO  16:02:10,156 - #21 x
INFO  16:02:10,156 - #47 [
INFO  16:02:10,156 - #48 ]
INFO  16:02:10,156 - #41 ;
INFO  16:02:10,156 - #21 char
INFO  16:02:10,157 - #21 ch
INFO  16:02:10,157 - #41 ;
INFO  16:02:10,157 - #49 {
INFO  16:02:10,157 - #21 a
INFO  16:02:10,157 - #38 =
INFO  16:02:10,157 - #10 new
INFO  16:02:10,157 - #21 A
INFO  16:02:10,157 - #41 ;
INFO  16:02:10,157 - #21 a
INFO  16:02:10,157 - #44 .
INFO  16:02:10,157 - #21 x
INFO  16:02:10,157 - #38 =
INFO  16:02:10,157 - #10 new
INFO  16:02:10,157 - #21 int
INFO  16:02:10,157 - #47 [
INFO  16:02:10,158 - #22 5
INFO  16:02:10,158 - #48 ]
INFO  16:02:10,158 - #41 ;
INFO  16:02:10,158 - #21 a
INFO  16:02:10,158 - #44 .
INFO  16:02:10,158 - #21 y
INFO  16:02:10,158 - #38 =
INFO  16:02:10,158 - #10 new
INFO  16:02:10,158 - #21 int
INFO  16:02:10,158 - #47 [
INFO  16:02:10,159 - #22 5
INFO  16:02:10,159 - #48 ]
INFO  16:02:10,159 - #41 ;
INFO  16:02:10,159 - #21 c
INFO  16:02:10,159 - #38 =
INFO  16:02:10,159 - #10 new
INFO  16:02:10,159 - #21 C
INFO  16:02:10,159 - #41 ;
INFO  16:02:10,159 - #21 c
INFO  16:02:10,159 - #44 .
INFO  16:02:10,159 - #21 theA
INFO  16:02:10,159 - #38 =
INFO  16:02:10,160 - #21 a
INFO  16:02:10,160 - #41 ;
INFO  16:02:10,160 - #21 c
INFO  16:02:10,160 - #44 .
INFO  16:02:10,160 - #21 x
INFO  16:02:10,160 - #38 =
INFO  16:02:10,160 - #10 new
INFO  16:02:10,160 - #21 int
INFO  16:02:10,161 - #47 [
INFO  16:02:10,161 - #22 5
INFO  16:02:10,161 - #48 ]
INFO  16:02:10,161 - #41 ;
INFO  16:02:10,161 - #21 x
INFO  16:02:10,161 - #38 =
INFO  16:02:10,161 - #10 new
INFO  16:02:10,161 - #21 int
INFO  16:02:10,162 - #47 [
INFO  16:02:10,162 - #22 3
INFO  16:02:10,162 - #48 ]
INFO  16:02:10,162 - #41 ;
INFO  16:02:10,162 - #12 read
INFO  16:02:10,162 - #45 (
INFO  16:02:10,162 - #21 c
INFO  16:02:10,162 - #44 .
INFO  16:02:10,163 - #21 i
INFO  16:02:10,163 - #46 )
INFO  16:02:10,163 - #41 ;
INFO  16:02:10,163 - #21 i
INFO  16:02:10,163 - #38 =
INFO  16:02:10,163 - #22 0
INFO  16:02:10,163 - #41 ;
INFO  16:02:10,163 - #8 do
INFO  16:02:10,163 - #49 {
INFO  16:02:10,164 - #12 read
INFO  16:02:10,164 - #45 (
INFO  16:02:10,164 - #21 c
INFO  16:02:10,164 - #44 .
INFO  16:02:10,164 - #21 x
INFO  16:02:10,164 - #47 [
INFO  16:02:10,164 - #21 i
INFO  16:02:10,164 - #48 ]
INFO  16:02:10,164 - #46 )
INFO  16:02:10,164 - #41 ;
INFO  16:02:10,164 - #12 read
INFO  16:02:10,164 - #45 (
INFO  16:02:10,164 - #21 c
INFO  16:02:10,164 - #44 .
INFO  16:02:10,164 - #21 theA
INFO  16:02:10,164 - #44 .
INFO  16:02:10,164 - #21 x
INFO  16:02:10,164 - #47 [
INFO  16:02:10,164 - #21 i
INFO  16:02:10,165 - #48 ]
INFO  16:02:10,165 - #46 )
INFO  16:02:10,165 - #41 ;
INFO  16:02:10,165 - #21 i
INFO  16:02:10,165 - #39 ++
INFO  16:02:10,165 - #41 ;
INFO  16:02:10,165 - #22 9
INFO  16:02:10,165 - #28 /
INFO  16:02:10,165 - #22 13
INFO  16:02:10,165 - #50 }
INFO  16:02:10,165 - #9 while
INFO  16:02:10,165 - #45 (
INFO  16:02:10,165 - #21 i
INFO  16:02:10,165 - #34 <
INFO  16:02:10,165 - #22 5
INFO  16:02:10,165 - #46 )
INFO  16:02:10,165 - #41 ;
INFO  16:02:10,165 - #11 print
INFO  16:02:10,165 - #45 (
INFO  16:02:10,165 - #21 c
INFO  16:02:10,165 - #44 .
INFO  16:02:10,165 - #21 getValue
INFO  16:02:10,165 - #45 (
INFO  16:02:10,165 - #21 c
INFO  16:02:10,165 - #44 .
INFO  16:02:10,165 - #21 theA
INFO  16:02:10,165 - #44 .
INFO  16:02:10,165 - #21 x
INFO  16:02:10,165 - #47 [
INFO  16:02:10,165 - #22 0
INFO  16:02:10,165 - #48 ]
INFO  16:02:10,165 - #46 )
INFO  16:02:10,166 - #46 )
INFO  16:02:10,166 - #41 ;
INFO  16:02:10,166 - #21 c
INFO  16:02:10,166 - #44 .
INFO  16:02:10,166 - #21 m
INFO  16:02:10,166 - #45 (
INFO  16:02:10,166 - #46 )
INFO  16:02:10,166 - #41 ;
INFO  16:02:10,166 - #50 }
INFO  16:02:10,166 - #50 }
